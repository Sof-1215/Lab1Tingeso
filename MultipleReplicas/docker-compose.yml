version: "3.8"

services:
  # Frontend services
  react1:
    container_name: prestabanco-frontend-container-1
    image: sof1215/tingesofrontend:latest
    ports:
      - 3001:80
    networks:
      - frontend-network
    deploy:
      restart_policy:
        condition: on-failure

  react2:
    container_name: prestabanco-frontend-container-2
    image: sof1215/tingesofrontend:latest
    ports:
      - 3002:80
    networks:
      - frontend-network
    deploy:
      restart_policy:
        condition: on-failure

  react3:
    container_name: prestabanco-frontend-container-3
    image: sof1215/tingesofrontend:latest
    ports:
      - 3003:80
    networks:
      - frontend-network
    deploy:
      restart_policy:
        condition: on-failure

  # Backend services
  spring1:
    container_name: prestabanco-backend-container-1
    image: sof1215/tingesoproyect:latest
    ports:
      - 8091:8090
    environment:
      DB_HOST: prestabanco-postgres-container
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: Silvestre9+
    networks:
      - backend-network
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres

  spring2:
    container_name: prestabanco-backend-container-2
    image: sof1215/tingesoproyect:latest
    ports:
      - 8092:8090
    environment:
      DB_HOST: prestabanco-postgres-container
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: Silvestre9+
    networks:
      - backend-network
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres

  spring3:
    container_name: prestabanco-backend-container-3
    image: sof1215/tingesoproyect:latest
    ports:
      - 8093:8090
    environment:
      DB_HOST: prestabanco-postgres-container
      DB_PORT: 5432
      DB_USERNAME: postgres
      DB_PASSWORD: Silvestre9+
    networks:
      - backend-network
    deploy:
      restart_policy:
        condition: on-failure
    depends_on:
      - postgres

  postgres:
    container_name: prestabanco-postgres-container
    image: postgres:16
    deploy:
      restart_policy:
        condition: on-failure
    volumes:
      - prestabanco-postgres-volume:/var/lib/postgresql/data
    networks:
      - backend-network
    environment:      
      POSTGRES_PASSWORD: Silvestre9+
      POSTGRES_USER: postgres
      POSTGRES_DB: TingesoDB
    ports:
      - 5435:5432

  # Nginx for frontend load balancing
  nginx-frontend:
    image: nginx
    container_name: nginx-frontend-container
    restart: always
    ports:
      - "8070:80"
    volumes:
      - ./nginx-frontend.conf:/etc/nginx/nginx.conf
    depends_on:
      - react1
      - react2
      - react3
    networks:
      - frontend-network

  # Nginx for backend load balancing
  nginx-backend:
    image: nginx
    container_name: nginx-backend-container
    restart: always
    ports:
      - "8090:8090"
    volumes:
      - ./nginx-backend.conf:/etc/nginx/nginx.conf
    depends_on:
      - spring1
      - spring2
      - spring3
    networks:
      - backend-network

volumes:
  prestabanco-postgres-volume:

networks:
  frontend-network:
  backend-network: